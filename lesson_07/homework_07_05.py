"""
Задание 5.
1) Создайте собственный класс-исключение,
который должен проверять содержимое списка на наличие только чисел.
Проверить работу исключения на реальном примере.
Необходимо запрашивать у пользователя данные и заполнять список только числами.
Класс-исключение должен контролировать типы данных элементов списка.
Примечание: длина списка не фиксирована. Элементы запрашиваются бесконечно,
пока пользователь сам не остановит работу скрипта, введя, например,
команду “stop”. При этом скрипт завершается,
сформированный список с числами выводится на экран.
Подсказка: для данного задания примем,
что пользователь может вводить только числа и строки.
При вводе пользователем очередного элемента необходимо реализовать проверку
типа элемента и вносить его в список, только если введено число.
Класс-исключение должен не позволить пользователю ввести текст (не число)
 и отобразить соответствующее сообщение.
 При этом работа скрипта не должна завершаться.
"""


class NotNumError(Exception):
    def __init__(self, txt):
        self.txt = txt


def fill_list():
    result = []
    flag = True
    i = 1
    while flag:
        try:
            val = input(f"{i}-й элемент: ")
            if val in "q":
                print()
                flag = False
            elif not val.isdigit():
                raise NotNumError("Это не натуральное число.")
            else:
                result.append(val)
        except NotNumError as err:
            print(err)
        else:
            i += 1
    return result


print("Заполните список натуральными числами («q» для завершения):")
print(f"Результат: {fill_list()}")
